#usda 1.0
(
    metersPerUnit = 1
    upAxis = "Y"
)

def "MaterialX"
{
    def "Materials"
    {
        def Material "USD_TexCoord"
        {

            token outputs:mtlx:surface.connect = </MaterialX/Materials/USD_TexCoord/realitykit_unlit.outputs:out>
            token outputs:realitykit:vertex.connect = </MaterialX/Materials/USD_TexCoord/GeometryModifier.outputs:out>

            def Shader "realitykit_unlit"
            {
                uniform token info:id = "ND_realitykit_unlit_surfaceshader"
                bool inputs:applyPostProcessToneMap = 0
                color3f inputs:color.connect = </MaterialX/Materials/USD_TexCoord/CastSwizzleFromMultiplyNode_8b5add3eccd74fdb9350d2560686bdb7ToSR_TexCoordcolor.outputs:out>
                token outputs:out
            }

            def Shader "GeometryModifier"
            {
                uniform token info:id = "ND_realitykit_geometrymodifier_vertexshader"
                token outputs:out
            }

            def Shader "CastSwizzleFromMultiplyNode_8b5add3eccd74fdb9350d2560686bdb7ToSR_TexCoordcolor"
            {
                uniform token info:id = "ND_swizzle_vector4_color3"
                float4 inputs:in.connect = </MaterialX/Materials/USD_TexCoord/MultiplyNode_8b5add3eccd74fdb9350d2560686bdb7.outputs:out>
                string inputs:channels = "xyz"
                color3f outputs:out
            }

            def Shader "MultiplyNode_8b5add3eccd74fdb9350d2560686bdb7"
            {
                uniform token info:id = "ND_multiply_vector4"
                float4 inputs:in1.connect = </MaterialX/Materials/USD_TexCoord/CastConvertFinalFromAddNode_1ca5757bb5df448ba9164cb22a2b07d7ToMultiplyNode_8b5add3eccd74fdb9350d2560686bdb7in1.outputs:out>
                float4 inputs:in2.connect = </MaterialX/Materials/USD_TexCoord/CastConvertFinalFromAddNode_476f598b9880427591331bf70fec9a45ToMultiplyNode_8b5add3eccd74fdb9350d2560686bdb7in2.outputs:out>
                float4 outputs:out
            }

            def Shader "CastConvertFinalFromAddNode_1ca5757bb5df448ba9164cb22a2b07d7ToMultiplyNode_8b5add3eccd74fdb9350d2560686bdb7in1"
            {
                uniform token info:id = "ND_combine4_vector4"
                float inputs:in1.connect = </MaterialX/Materials/USD_TexCoord/CastSwizzle1FromAddNode_1ca5757bb5df448ba9164cb22a2b07d7ToMultiplyNode_8b5add3eccd74fdb9350d2560686bdb7in1.outputs:out>
                float inputs:in2.connect = </MaterialX/Materials/USD_TexCoord/CastSwizzle2FromAddNode_1ca5757bb5df448ba9164cb22a2b07d7ToMultiplyNode_8b5add3eccd74fdb9350d2560686bdb7in1.outputs:out>
                float inputs:in3 = 0
                float inputs:in4 = 0
                float4 outputs:out
            }

            def Shader "CastSwizzle1FromAddNode_1ca5757bb5df448ba9164cb22a2b07d7ToMultiplyNode_8b5add3eccd74fdb9350d2560686bdb7in1"
            {
                uniform token info:id = "ND_swizzle_vector2_float"
                float2 inputs:in.connect = </MaterialX/Materials/USD_TexCoord/CastConvertFromAddNode_1ca5757bb5df448ba9164cb22a2b07d7ToMultiplyNode_8b5add3eccd74fdb9350d2560686bdb7in1.outputs:out>
                string inputs:channels = "x"
                float outputs:out
            }

            def Shader "CastConvertFromAddNode_1ca5757bb5df448ba9164cb22a2b07d7ToMultiplyNode_8b5add3eccd74fdb9350d2560686bdb7in1"
            {
                uniform token info:id = "ND_dot_vector2"
                float2 inputs:in.connect = </MaterialX/Materials/USD_TexCoord/AddNode_1ca5757bb5df448ba9164cb22a2b07d7.outputs:out>
                float2 outputs:out
            }

            def Shader "AddNode_1ca5757bb5df448ba9164cb22a2b07d7"
            {
                uniform token info:id = "ND_add_vector2"
                float2 inputs:in1 = (0, 1)
                float2 inputs:in2.connect = </MaterialX/Materials/USD_TexCoord/MultiplyNode_1ca5757bb5df448ba9164cb22a2b07d7.outputs:out>
                float2 outputs:out
            }

            def Shader "MultiplyNode_1ca5757bb5df448ba9164cb22a2b07d7"
            {
                uniform token info:id = "ND_multiply_vector2"
                float2 inputs:in1 = (1, -1)
                float2 inputs:in2.connect = </MaterialX/Materials/USD_TexCoord/UVNode_1ca5757bb5df448ba9164cb22a2b07d7.outputs:out>
                float2 outputs:out
            }

            def Shader "UVNode_1ca5757bb5df448ba9164cb22a2b07d7"
            {
                uniform token info:id = "ND_texcoord_vector2"
                int inputs:index = 0
                float2 outputs:out
            }

            def Shader "CastConvertFinalFromAddNode_476f598b9880427591331bf70fec9a45ToMultiplyNode_8b5add3eccd74fdb9350d2560686bdb7in2"
            {
                uniform token info:id = "ND_combine4_vector4"
                float inputs:in1.connect = </MaterialX/Materials/USD_TexCoord/CastSwizzle1FromAddNode_476f598b9880427591331bf70fec9a45ToMultiplyNode_8b5add3eccd74fdb9350d2560686bdb7in2.outputs:out>
                float inputs:in2.connect = </MaterialX/Materials/USD_TexCoord/CastSwizzle2FromAddNode_476f598b9880427591331bf70fec9a45ToMultiplyNode_8b5add3eccd74fdb9350d2560686bdb7in2.outputs:out>
                float inputs:in3 = 0
                float inputs:in4 = 0
                float4 outputs:out
            }

            def Shader "CastSwizzle2FromAddNode_476f598b9880427591331bf70fec9a45ToMultiplyNode_8b5add3eccd74fdb9350d2560686bdb7in2"
            {
                uniform token info:id = "ND_swizzle_vector2_float"
                float2 inputs:in.connect = </MaterialX/Materials/USD_TexCoord/CastConvertFromAddNode_476f598b9880427591331bf70fec9a45ToMultiplyNode_8b5add3eccd74fdb9350d2560686bdb7in2.outputs:out>
                string inputs:channels = "y"
                float outputs:out
            }

            def Shader "CastConvertFromAddNode_476f598b9880427591331bf70fec9a45ToMultiplyNode_8b5add3eccd74fdb9350d2560686bdb7in2"
            {
                uniform token info:id = "ND_dot_vector2"
                float2 inputs:in.connect = </MaterialX/Materials/USD_TexCoord/AddNode_476f598b9880427591331bf70fec9a45.outputs:out>
                float2 outputs:out
            }

            def Shader "AddNode_476f598b9880427591331bf70fec9a45"
            {
                uniform token info:id = "ND_add_vector2"
                float2 inputs:in1 = (0, 1)
                float2 inputs:in2.connect = </MaterialX/Materials/USD_TexCoord/MultiplyNode_476f598b9880427591331bf70fec9a45.outputs:out>
                float2 outputs:out
            }

            def Shader "MultiplyNode_476f598b9880427591331bf70fec9a45"
            {
                uniform token info:id = "ND_multiply_vector2"
                float2 inputs:in1 = (1, -1)
                float2 inputs:in2.connect = </MaterialX/Materials/USD_TexCoord/UVNode_476f598b9880427591331bf70fec9a45.outputs:out>
                float2 outputs:out
            }

            def Shader "UVNode_476f598b9880427591331bf70fec9a45"
            {
                uniform token info:id = "ND_UsdPrimvarReader_vector2"
                string inputs:varname = "vertexUV1"
                float2 outputs:out
            }

            def Shader "CastSwizzle1FromAddNode_476f598b9880427591331bf70fec9a45ToMultiplyNode_8b5add3eccd74fdb9350d2560686bdb7in2"
            {
                uniform token info:id = "ND_swizzle_vector2_float"
                float2 inputs:in.connect = </MaterialX/Materials/USD_TexCoord/CastConvertFromAddNode_476f598b9880427591331bf70fec9a45ToMultiplyNode_8b5add3eccd74fdb9350d2560686bdb7in2.outputs:out>
                string inputs:channels = "x"
                float outputs:out
            }

            def Shader "CastSwizzle2FromAddNode_1ca5757bb5df448ba9164cb22a2b07d7ToMultiplyNode_8b5add3eccd74fdb9350d2560686bdb7in1"
            {
                uniform token info:id = "ND_swizzle_vector2_float"
                float2 inputs:in.connect = </MaterialX/Materials/USD_TexCoord/CastConvertFromAddNode_1ca5757bb5df448ba9164cb22a2b07d7ToMultiplyNode_8b5add3eccd74fdb9350d2560686bdb7in1.outputs:out>
                string inputs:channels = "y"
                float outputs:out
            }
        }
    }
}
